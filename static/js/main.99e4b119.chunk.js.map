{"version":3,"sources":["svg/X.js","svg/O.js","index.js"],"names":["X","props","stroke_color","winningSquare","xmlns","viewBox","className","stroke","d","O","fill","cx","cy","r","Square","onClick","value","Board","i","win_squares","this","winningSquares","slice","key","undefined","find","square","squares","boardRows","boardRow","j","push","renderSquare","status","React","Component","Game","state","moveSortingAscending","stepNumber","xIsNext","history","Array","move","console","log","length","calculateWinner","setState","concat","current","moves","map","step","moveIndex","desc","Math","floor","jumpTo","handleClick","toggleMoveSorting","reverse","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99e4b119.chunk.js","sourcesContent":["import React from \"react\";\r\nfunction X(props) {\r\n  let stroke_color = props.winningSquare ? \"#f00\" : \"#0f0\";\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 256 256\">\r\n      <g>\r\n        <path className=\"X__line__1\" stroke={stroke_color} d=\"M228 28 28 228\" />\r\n        <path className=\"X__line__2\" stroke={stroke_color} d=\"M28 28 228 228\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default X;\r\n","import React from \"react\";\r\nfunction O(props) {\r\n  let stroke_color = props.winningSquare ? \"#f00\" : \"#00f\";\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 256 256\">\r\n      <circle\r\n        className=\"O__circle\"\r\n        stroke={stroke_color}\r\n        fill=\"none\"\r\n        cx=\"128\"\r\n        cy=\"128\"\r\n        r=\"103\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default O;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport X from \"./svg/X\";\r\nimport O from \"./svg/O\";\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value === \"X\" && <X winningSquare={props.winningSquare} />}\r\n      {props.value === \"O\" && <O winningSquare={props.winningSquare} />}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    let win_squares = this.props.winningSquares\r\n      ? this.props.winningSquares.slice()\r\n      : [];\r\n    return (\r\n      <Square\r\n        key={i}\r\n        winningSquare={win_squares.find((square) => square === i) !== undefined}\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    var boardRows = [];\r\n    for (let i = 0; i < 9; i += 3) {\r\n      let boardRow = [];\r\n      for (let j = 0; j < 3; j++) {\r\n        boardRow.push(this.renderSquare(i + j));\r\n      }\r\n      boardRows.push(\r\n        <div key={i} className=\"board-row\">\r\n          {boardRow}\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"status\">{this.props.status}</div>\r\n        {boardRows}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      moveSortingAscending: true,\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n          move: null,\r\n        },\r\n      ],\r\n    };\r\n    console.log(this.state.history);\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) return;\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    const move = i;\r\n    this.setState({\r\n      history: history.concat([{ squares: squares, move: move }]),\r\n      xIsNext: !this.state.xIsNext,\r\n      stepNumber: history.length,\r\n    });\r\n  }\r\n\r\n  jumpTo(i) {\r\n    this.setState({\r\n      stepNumber: i,\r\n      xIsNext: i % 2 === 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winningSquares = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, moveIndex) => {\r\n      let desc = moveIndex\r\n        ? \"Go to moveIndex #\" + moveIndex\r\n        : \"Go to game start\";\r\n      step.move !== null\r\n        ? (desc += ` (Move made: x:${(step.move % 3) + 1} y:${\r\n            3 - Math.floor(step.move / 3)\r\n          })`)\r\n        : (desc += \"\");\r\n      return (\r\n        <li key={moveIndex}>\r\n          <button onClick={() => this.jumpTo(moveIndex)}>\r\n            {this.state.stepNumber === moveIndex ? <b>{desc}</b> : desc}\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n    let status;\r\n    if (winningSquares) {\r\n      let winner = current.squares[winningSquares[0]];\r\n      status = \"Winner: \" + winner;\r\n    } else if (this.state.stepNumber === 9) {\r\n      status = \"Draw\";\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            winningSquares={winningSquares}\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <button onClick={() => this.toggleMoveSorting()}>\r\n            Toggle moves order\r\n          </button>\r\n          <ol>{this.state.moveSortingAscending ? moves : moves.reverse()}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  toggleMoveSorting() {\r\n    this.setState({ moveSortingAscending: !this.state.moveSortingAscending });\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c])\r\n      return lines[i];\r\n  }\r\n  return null;\r\n}\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}